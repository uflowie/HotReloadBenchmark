@page "/create-ticket"
@using Radzen
@inject BlazorClient.ApiClient Api
@inject Radzen.NotificationService NotificationService

<h3>Create Ticket</h3>
<RadzenTemplateForm Data="ticket" TItem="BlazorClient.Ticket" Submit="OnSubmit">
    <RadzenFieldset Text="Ticket Details">
        <RadzenLabel Text="Customer" />
        <RadzenDropDown Data="customers" @bind-Value="ticket.CustomerId" TextProperty="Name" ValueProperty="Id" Name="Customer" Style="width: 100%" />
        <RadzenRequiredValidator Component="Customer" Text="Customer is required" />
        <br />
        <RadzenLabel Text="Issue" />
        <RadzenTextArea @bind-Value="ticket.Issue" Name="Issue" Style="width: 100%" />
        <RadzenRequiredValidator Component="Issue" Text="Issue is required" />
    </RadzenFieldset>
    <RadzenButton Text="Create Ticket" ButtonType="ButtonType.Submit" Style="margin-top: 16px" />
</RadzenTemplateForm>

@code {
    private BlazorClient.Ticket ticket = new();
    private List<BlazorClient.Customer> customers = new();

    protected override async Task OnInitializedAsync()
    {
        customers = await Api.GetCustomersAsync();
    }

    private async Task OnSubmit(BlazorClient.Ticket _)
    {
        await Api.CreateTicketAsync(ticket);
        NotificationService.Notify(Radzen.NotificationSeverity.Success, "Ticket created", "The ticket was successfully created.");
        ticket = new();
    }
}
